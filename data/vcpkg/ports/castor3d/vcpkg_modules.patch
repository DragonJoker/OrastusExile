diff --git a/Modules/vcpkg/FindJPEG.cmake b/Modules/vcpkg/FindJPEG.cmake
new file mode 100644
index 0000000..c2ea839
--- /dev/null
+++ b/Modules/vcpkg/FindJPEG.cmake
@@ -0,0 +1,20 @@
+set( VCPKG_TRIPLET_DIR
+	${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}
+)
+set( JPEG_INCLUDE_DIR
+	${VCPKG_TRIPLET_DIR}/include
+)
+
+if ( MSVC )
+	set( JPEG_LIBRARY
+		optimized ${VCPKG_TRIPLET_DIR}/lib/jpeg.lib
+		debug ${VCPKG_TRIPLET_DIR}/debug/lib/jpeg.lib
+	)
+else()
+	set( JPEG_LIBRARY
+		${VCPKG_TRIPLET_DIR}/lib/libjpeg.a
+	)
+endif()
+
+include( FindPackageHandleStandardArgs )
+FIND_PACKAGE_HANDLE_STANDARD_ARGS( JPEG DEFAULT_MSG JPEG_INCLUDE_DIR JPEG_LIBRARY )
diff --git a/Modules/vcpkg/FindPNG.cmake b/Modules/vcpkg/FindPNG.cmake
new file mode 100644
index 0000000..2b0ab3b
--- /dev/null
+++ b/Modules/vcpkg/FindPNG.cmake
@@ -0,0 +1,20 @@
+set( VCPKG_TRIPLET_DIR
+	${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}
+)
+set( PNG_INCLUDE_DIR
+	${VCPKG_TRIPLET_DIR}/include
+)
+
+if ( MSVC )
+	set( PNG_LIBRARY
+		optimized ${VCPKG_TRIPLET_DIR}/lib/libpng16.lib
+		debug ${VCPKG_TRIPLET_DIR}/debug/lib/libpng16d.lib
+	)
+else()
+	set( PNG_LIBRARY
+		${VCPKG_TRIPLET_DIR}/lib/libpng16.a
+	)
+endif()
+
+include( FindPackageHandleStandardArgs )
+FIND_PACKAGE_HANDLE_STANDARD_ARGS( PNG DEFAULT_MSG PNG_INCLUDE_DIR PNG_LIBRARY )
diff --git a/Modules/vcpkg/FindTIFF.cmake b/Modules/vcpkg/FindTIFF.cmake
new file mode 100644
index 0000000..c9c2945
--- /dev/null
+++ b/Modules/vcpkg/FindTIFF.cmake
@@ -0,0 +1,20 @@
+set( VCPKG_TRIPLET_DIR
+	${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}
+)
+set( TIFF_INCLUDE_DIR
+	${VCPKG_TRIPLET_DIR}/include
+)
+
+if ( MSVC )
+	set( TIFF_LIBRARY
+		optimized ${VCPKG_TRIPLET_DIR}/lib/tiff.lib
+		debug ${VCPKG_TRIPLET_DIR}/debug/lib/tiffd.lib
+	)
+else()
+	set( TIFF_LIBRARY
+		${VCPKG_TRIPLET_DIR}/lib/libtiff.a
+	)
+endif()
+
+include( FindPackageHandleStandardArgs )
+FIND_PACKAGE_HANDLE_STANDARD_ARGS( TIFF DEFAULT_MSG TIFF_INCLUDE_DIR TIFF_LIBRARY )
diff --git a/Modules/vcpkg/FindZLIB.cmake b/Modules/vcpkg/FindZLIB.cmake
new file mode 100644
index 0000000..2c2fdaa
--- /dev/null
+++ b/Modules/vcpkg/FindZLIB.cmake
@@ -0,0 +1,59 @@
+set( VCPKG_TRIPLET_DIR
+	${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}
+)
+set( ZLIB_INCLUDE_DIR
+	${VCPKG_TRIPLET_DIR}/include
+)
+
+if ( MSVC )
+	set( ZLIB_LIBRARY_RELEASE
+		${VCPKG_TRIPLET_DIR}/lib/zlib.lib
+	)
+	set( ZLIB_LIBRARY_DEBUG
+		${VCPKG_TRIPLET_DIR}/debug/lib/zlibd.lib
+	)
+	set( ZLIB_LIBRARY
+		optimized ${ZLIB_LIBRARY_RELEASE}
+		debug ${ZLIB_LIBRARY_DEBUG}
+	)
+else()
+	set( ZLIB_LIBRARY
+		${VCPKG_TRIPLET_DIR}/lib/libz.a
+	)
+endif()
+
+include( FindPackageHandleStandardArgs )
+FIND_PACKAGE_HANDLE_STANDARD_ARGS( ZLIB DEFAULT_MSG ZLIB_INCLUDE_DIR ZLIB_LIBRARY )
+
+if(ZLIB_FOUND)
+	set(ZLIB_INCLUDE_DIRS ${ZLIB_INCLUDE_DIR})
+
+	if(NOT ZLIB_LIBRARIES)
+		set(ZLIB_LIBRARIES ${ZLIB_LIBRARY})
+	endif()
+
+	if(NOT TARGET ZLIB::ZLIB)
+		add_library(ZLIB::ZLIB UNKNOWN IMPORTED)
+		set_target_properties(ZLIB::ZLIB PROPERTIES
+			INTERFACE_INCLUDE_DIRECTORIES "${ZLIB_INCLUDE_DIRS}")
+
+		if(ZLIB_LIBRARY_RELEASE)
+			set_property(TARGET ZLIB::ZLIB APPEND PROPERTY
+				IMPORTED_CONFIGURATIONS RELEASE)
+			set_target_properties(ZLIB::ZLIB PROPERTIES
+				IMPORTED_LOCATION_RELEASE "${ZLIB_LIBRARY_RELEASE}")
+		endif()
+
+		if(ZLIB_LIBRARY_DEBUG)
+			set_property(TARGET ZLIB::ZLIB APPEND PROPERTY
+				IMPORTED_CONFIGURATIONS DEBUG)
+			set_target_properties(ZLIB::ZLIB PROPERTIES
+				IMPORTED_LOCATION_DEBUG "${ZLIB_LIBRARY_DEBUG}")
+		endif()
+
+		if(NOT ZLIB_LIBRARY_RELEASE AND NOT ZLIB_LIBRARY_DEBUG)
+			set_property(TARGET ZLIB::ZLIB APPEND PROPERTY
+				IMPORTED_LOCATION "${ZLIB_LIBRARY}")
+		endif()
+	endif()
+endif()
